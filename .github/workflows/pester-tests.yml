name: PowerShell Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
     
      - name: Install Blake3 (b3sum)
        shell: pwsh
        run: |
          # Download and install b3sum from GitHub releases
          $version = "1.8.2"
          $url = "https://github.com/BLAKE3-team/BLAKE3/releases/download/$version/b3sum-$version-x86_64-pc-windows-msvc.zip"
          $zipPath = "$env:TEMP\b3sum.zip"
          $extractPath = "$env:TEMP\b3sum"
          
          Write-Host "Downloading b3sum $version..."
          Invoke-WebRequest -Uri $url -OutFile $zipPath
          
          Write-Host "Extracting b3sum..."
          Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force
          
          # Copy to a simple location
          $destPath = "C:\b3sum"
          New-Item -ItemType Directory -Path $destPath -Force | Out-Null
          Copy-Item -Path "$extractPath\b3sum.exe" -Destination "$destPath\b3sum.exe" -Force
          
          # Add to GitHub Actions PATH for subsequent steps
          echo "$destPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
          # Verify installation
          & "$destPath\b3sum.exe" --version
          Write-Host "b3sum installed successfully"
          
      - name: Install Pester
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Pester -Force -RequiredVersion 5.6.1 -SkipPublisherCheck
      
      - name: Run Pester Tests
        shell: pwsh
        run: |
          Import-Module Pester -RequiredVersion 5.6.1
          
          $pesterConfig = New-PesterConfiguration
          $pesterConfig.Run.Path = "./tests"
          $pesterConfig.Run.PassThru = $true
          $pesterConfig.Output.Verbosity = "Detailed"
          $pesterConfig.TestResult.Enabled = $true
          $pesterConfig.TestResult.OutputFormat = "NUnitXml"
          $pesterConfig.TestResult.OutputPath = "testResults.xml"
          
          $result = Invoke-Pester -Configuration $pesterConfig
          
          if ($result.FailedCount -gt 0) {
              throw "Pester tests failed"
          }
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: testResults.xml
